
@{
    ViewBag.Title = "Chess";
}
<link rel="stylesheet" href="~/Scripts/Board.css">
<script src="https://code.jquery.com/jquery-1.12.4.min.js"></script>

<script src="~/Scripts/Chessboard.js"></script>
<script src="~/Scripts/Chess.js"></script>
<style>
    .margins
    {
        margin-left:400px;
        margin-top:250px;
    }
</style>
<body>
    <div class="sidebar" style="display:none" id="Sidebar">
        <button class="bs-tooltip-left"
                onclick="sidebar_close()" color="blue">
            &times;
        </button>
        <p>
            <a href="#">@Html.ActionLink("Home", "", new { controller = "Home" }, new { @class = "btn btn-default", role = "button" })</a>
        </p>
        <p>
            <a href="#">@Html.ActionLink("Leaderboard", "Leaderboard", new { controller = "Leaderboard" }, new { @class = "btn btn-default", role = "button" })</a>
        </p>
        <p>
            <a href="#">@Html.ActionLink("Play", "Chess", new { controller = "Chess" }, new { @class = "btn btn-default", role = "button" })</a>
        </p>
        <p>
            <audio controls autoplay loop style="display:none">
                <iframe src="../AudioFiles/Orgrimmar.mp3" allow="autoplay" style="display:none" id="iframeAudio"></iframe>
                <source src="../AudioFiles/Orgrimmar.mp3" type="audio/mpeg">
            </audio>
        </p>
    </div>
    <div class="main" style="margin-left:0px">

        <div class="sidebar">
            <button class="btn" onclick="sidebar_open()">&#9776;</button>
            <div class="sidebar-container">
            </div>
        </div>
    </div>
    <script>
        function sidebar_open() {
            document.getElementById("Sidebar").style.display = "block";
        }
        function sidebar_close() {
            document.getElementById("Sidebar").style.display = "none";
        }

    </script>
    <div class="margins">
        <div id="board" style="width: 400px"></div>
        <script>
            var board,
                game = new Chess();

            var removeGreySquares = function () {
                $('#board .square-55d63').css('background', '');
            };

            var greySquare = function (square) {
                var squareEl = $('#board .square-' + square);

                var background = '#a9a9a9';
                if (squareEl.hasClass('black-3c85d') === true) {
                    background = '#696969';
                }

                squareEl.css('background', background);
            };

            var onDragStart = function (source, piece) {
                // do not pick up pieces if the game is over
                // or if it's not that side's turn
                if (game.game_over() === true ||
                    (game.turn() === 'w' && piece.search(/^b/) !== -1) ||
                    (game.turn() === 'b' && piece.search(/^w/) !== -1)) {
                    return false;
                }
            };

            var onDrop = function (source, target) {
                removeGreySquares();

                // see if the move is legal
                var move = game.move({
                    from: source,
                    to: target,
                    promotion: 'q' // NOTE: always promote to a queen for example simplicity
                });

                // illegal move
                if (move === null) return 'snapback';
            };

            var onMouseoverSquare = function (square, piece) {
                // get list of possible moves for this square
                var moves = game.moves({
                    square: square,
                    verbose: true
                });

                // exit if there are no moves available for this square
                if (moves.length === 0) return;

                // highlight the square they moused over
                greySquare(square);

                // highlight the possible squares for this piece
                for (var i = 0; i < moves.length; i++) {
                    greySquare(moves[i].to);
                }
            };

            var onMouseoutSquare = function (square, piece) {
                removeGreySquares();
            };

            var onSnapEnd = function () {
                board.position(game.fen());
            };

            var cfg = {
                draggable: true,
                position: 'start',
                onDragStart: onDragStart,
                onDrop: onDrop,
                onMouseoutSquare: onMouseoutSquare,
                onMouseoverSquare: onMouseoverSquare,
                onSnapEnd: onSnapEnd
            };
            board = ChessBoard('board', cfg);
        </script>
    </div>
</body>



